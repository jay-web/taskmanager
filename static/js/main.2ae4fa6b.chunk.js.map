{"version":3,"sources":["hooks/useToggle.js","hooks/useInput.js","reducer/todo.reducer.jsx","hooks/useLocaStorageReducer.js","contexts/tasks.contexts.jsx","components/editTask_form/editTask.component.jsx","components/task/task.style.js","components/task/task.component.jsx","components/tasks_list/tasksList.component.jsx","components/tasks_form/tasksForm.style.js","components/tasks_form/tasksForm.component.jsx","hooks/useLocalStorage.js","components/tasks/tasks.style.js","components/tasks/tasks.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initialValue","useState","state","setState","toggleState","useInput","e","target","value","taskReducer","action","type","task","id","uuidv4","item","completed","filter","map","newTask","useLocalStorageReducer","key","defaultVal","reducer","useReducer","val","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","defaultTasks","TasksContext","createContext","DispatchContext","TasksProvider","props","tasks","Provider","children","EditForm","toggle","handleChange","reset","useContext","onSubmit","preventDefault","style","marginLeft","width","TextField","fullWidth","onChange","styles","root","fontFamily","height","textBox","position","right","deleteIcon","transform","transition","color","editIcon","checkbox","memo","withStyles","classes","isEditing","textDecoration","console","log","ListItem","gutters","className","Checkbox","tabIndex","checked","onClick","ListItemText","wordWrap","disableTypography","ListItemSecondaryAction","IconButton","aria-label","TaskList","length","Paper","List","i","Fragment","Divider","content","borderBottom","icon","marginTop","marginRight","margin","display","alignItems","flexGrow","label","useLocalStorageState","header","backgroundColor","taskPage","background","overflow","logo","padding","elevation","AppBar","Typography","variant","Grid","container","justify","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ae4fa6b.chunk.js","sourcesContent":["import {useState } from \"react\";\n\nconst useToggle = (initialValue = false) => {\n    const [state, setState] = useState(initialValue);\n\n    const toggleState = () => {\n        setState(!state);\n    }\n\n    return [state, toggleState];\n}\n\n\nexport default useToggle;","import {useState } from \"react\";\n\nconst useInput = (initialValue) => {\n    const [state, setState] = useState(initialValue);\n\n    const handleChange = (e) => {\n        setState(e.target.value);\n    }\n\n    const reset = () => {\n        setState(\"\");\n    }\n\n    return [state, handleChange, reset];\n}\n\nexport default useInput;","import { v4 as uuidv4} from \"uuid\";\n\nconst taskReducer = (state, action) => {\n    switch(action.type){\n        case \"ADD_TASK\":\n            if(action.task === \"\"){\n                return state;\n            }else{\n                return [...state, {id: uuidv4(), item: action.task, completed: false}]\n            }\n        case \"REMOVE_TASK\":\n            return state.filter((task) => {\n                return task.id  !== action.id;\n            });\n        case \"TOGGLE_TASK\":\n            return state.map((task) => {\n                if(task.id === action.id){\n                    return { ...task, completed: !task.completed}\n                }else{\n                    return task;\n                }\n            });\n        case \"UPDATE_TASK\":\n            if(action.newTask === \"\"){\n                return state;\n            }else{\n                return state.map(task => {\n                    if(task.id === action.id){\n                        return {...task, item: action.newTask}\n                    }else{\n                        return task;\n                    }\n                });\n            }\n        default :\n            return state;\n          \n    }\n}\n\n\n\nexport default taskReducer;","import {useReducer, useEffect} from \"react\";\n\n\nfunction useLocalStorageReducer (key , defaultVal, reducer) {\n    const[state, dispatch] = useReducer(reducer, defaultVal, () => {\n        let val;\n        try{\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n        }catch(e){\n            val = defaultVal;\n        }\n        return val;\n    });\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [state])\n\n    return [state, dispatch];\n\n}\n\nexport default useLocalStorageReducer;","import React, { createContext } from \"react\";\n// import useTaskState from \"../hooks/useTaskState\";\nimport taskReducer from \"../reducer/todo.reducer\";\nimport useLocalStorageReducer from \"../hooks/useLocaStorageReducer\";\n\nconst defaultTasks = [{ id: 1, item: \"lets do some tasks\", completed: false }];\n\nexport const TasksContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TasksProvider(props) {\n  // const todosmethods = useTaskState(defaultTasks);\n  // const [tasks, dispatch] = useReducer(taskReducer);\n  const [tasks, dispatch] = useLocalStorageReducer(\"todos\", defaultTasks, taskReducer);\n\n  return (\n    <TasksContext.Provider value={tasks}>\n      <DispatchContext.Provider value={dispatch}>\n          {props.children}\n      </DispatchContext.Provider>\n    </TasksContext.Provider>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport useInput from \"../../hooks/useInput\";\nimport {DispatchContext } from \"../../contexts/tasks.contexts\";\n\nfunction EditForm ({task, toggle}) {\n    const [value, handleChange, reset] = useInput(task.item);  // using custom hook\n    const dispatch = useContext(DispatchContext);\n\n    const onSubmit =(e) => {\n        e.preventDefault();\n        dispatch({type: \"UPDATE_TASK\", id: task.id, newTask: value});\n        // updateTask(task.id, value);\n        toggle();\n        reset()\n\n    }\n    return (\n        <form onSubmit={onSubmit} style={{ marginLeft: \"1rem\", width: \"90%\"}}>\n            <TextField \n                fullWidth \n                value={value} \n                onChange={(e) => handleChange(e)}\n             />\n        </form>\n    \n    )\n}\n\nexport default EditForm;","const styles = {\n    root:{\n        '& .MuiTypography-body1':{\n            fontFamily: 'Akaya Telivigala, cursive'\n        },\n        height : \"64px\", \n        width: \"80%\",\n        \n    },\n    textBox:{\n        position: \"absolute\", \n        right: \"-100px\"\n    },\n    deleteIcon:{\n        \"&:hover\":{\n            transform: \"scale(1.2)\",\n            transition: \"all .3s ease-in-out\",\n            color: \"red\"\n        }\n    },\n    editIcon:{\n        color:\"#9f7300\",\n        \"&:hover\":{\n            transform: \"scale(1.2)\",\n            transition: \"all .3s ease-in-out\",\n            color: \"#9f7300\"\n        }\n    },\n    checkbox:{\n        color: \"#9f7300\",\n        '&$checked': {\n            color: \"#9f7300\",\n          }\n    }\n\n}\n\nexport default styles;","import React, {useContext, memo} from \"react\";\nimport useToggle from \"./../../hooks/useToggle\";\n\nimport { ListItem, ListItemText, Checkbox, withStyles } from \"@material-ui/core\";\nimport { IconButton, ListItemSecondaryAction } from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport EditForm from \"../editTask_form/editTask.component\";\nimport {DispatchContext } from \"../../contexts/tasks.contexts\";\nimport styles from \"./task.style\";\n\nfunction Task({ task, completed, classes }) {\n  const [isEditing, toggle] = useToggle(false);\n  const  dispatch  = useContext(DispatchContext);\n  \n\n  const textDecoration = completed ? \"line-through\" : \"none\";\n  console.log(task);\n  return (\n    <span>\n      <ListItem gutters=\"true\" className={classes.root}>\n        {!isEditing ? (\n          <>\n            <Checkbox\n              tabIndex={-1}\n              checked={completed}\n              className={classes.checkbox}\n              color=\"default\"\n              onClick={() => dispatch({type: \"TOGGLE_TASK\", id: task.id})}\n            />\n            <ListItemText style={{ textDecoration: textDecoration, wordWrap: \"break-word\", fontFamily: 'Akaya Telivigala, cursive'}} disableTypography={false}>\n              {task.item}\n            </ListItemText>\n            <ListItemSecondaryAction className={classes.textBox}>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => dispatch({type: \"REMOVE_TASK\", id: task.id})}\n              >\n                <DeleteIcon className={classes.deleteIcon} />\n              </IconButton>\n              <IconButton aria-label=\"edit\" onClick={() => toggle()}>\n                <EditIcon className={classes.editIcon} />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        ) : (\n          <EditForm task={task} toggle={toggle} />\n        )}\n      </ListItem>\n    </span>\n  );\n}\n\nexport default memo(withStyles(styles)(Task));\n","import React, { useContext } from \"react\";\nimport { List, Paper, Divider } from \"@material-ui/core\";\nimport Task from \"./../task/task.component\";\nimport { TasksContext } from \"../../contexts/tasks.contexts\";\n\nfunction TaskList() {\n  const tasks = useContext(TasksContext);\n\n  if (tasks.length) {\n    return (\n      <Paper>\n        <List>\n          {tasks.map((task, i) => {\n            return (\n              <React.Fragment key={task.id}>\n                <Task task={task} completed={task.completed} />\n                {i < tasks.length - 1 && <Divider />}\n              </React.Fragment>\n            );\n          })}\n        </List>\n      </Paper>\n    );\n  }\n\n  return null;\n}\n\nexport default TaskList;\n","\n\nconst styles = {\n    root:{\n        '& .MuiInputBase-input':{\n          fontFamily: 'Akaya Telivigala, cursive'\n        },\n        '& label.Mui-focused': {\n            color: '#9f7300',\n           \n          },\n          // '& .MuiInput-underline:after': {\n          //   borderBottom: \"none\",\n          // },\n          '& .MuiInput-underline:before':{\n            content: \"none\"\n          },\n          '& .MuiInput-underline:after':{\n            // borderBottom: \"2px solid #9f7300\",\n            borderBottom: \"none\",\n          },\n          \n          \n    },\n    icon:{\n      marginTop: \"1rem\",\n      marginRight: \".6rem\",\n      color: '#9f7300',\n      \n    }\n}\n\nexport default styles;","import React, { useContext } from \"react\";\nimport { Paper, TextField , withStyles } from \"@material-ui/core\";\nimport useInput from \"../../hooks/useInput\";\nimport { DispatchContext } from \"../../contexts/tasks.contexts\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport styles from \"./tasksForm.style\";\n\nfunction TaskForm({classes}) {\n  const [value, handleChange, reset] = useInput(\"\");\n  const dispatch = useContext(DispatchContext);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch({ type: \"ADD_TASK\", task: value });\n    // addTask(value);\n    reset();\n  };\n\n  return (\n    <Paper style={{ margin: \"1rem 0\", display: \"flex\", alignItems: \"center\" }}>\n      <PlaylistAddIcon className={classes.icon} />\n      <form onSubmit={onSubmit} style={{ flexGrow: 1 }}>\n        <TextField\n          value={value}\n          onChange={handleChange}\n          label=\"Add new task\"\n          fullWidth\n          className={classes.root}\n          \n        />\n      </form>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(TaskForm);\n","import { useState, useEffect } from \"react\";\n\nfunction useLocalStorageState (key , defaultVal) {\n    const[state, setState ] = useState(() => {\n        let val;\n        try{\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n        }catch(e){\n            val = defaultVal;\n        }\n        return val;\n    });\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [state])\n\n    return [state, setState];\n\n}\n\nexport default useLocalStorageState;","const styles = {\n    header:{\n        height: \"10vh\", \n        backgroundColor: \"#9f7300\",\n        \n    },\n    taskPage:{\n        background: \"#e1ad3d\", \n        height: \"90vh\", \n        width: \"100vw\",\n        overflow: \"auto\" \n    },\n    logo:{\n        fontFamily: 'Akaya Telivigala, cursive'\n    }\n}\n\nexport default styles;","import React, {useContext } from \"react\";\nimport {Typography, withStyles} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TaskList from \"./../tasks_list/tasksList.component\";\nimport TaskForm from \"./../tasks_form/tasksForm.component\";\nimport useTaskState from \"./../../hooks/useTaskState\";\nimport {TasksContext} from \"../../contexts/tasks.contexts\";\nimport styles from \"./tasks.style\";\n\nfunction Tasks(props) {\n   const initialTasks = [];\n   const {classes} = props;\n\n    // const {tasks} = useTaskState(initialTasks);\n    const tasks  = useContext(TasksContext);\n \n    return (\n        <Paper\n            style={{\n                padding: 0,\n                margin: 0,\n                \n                backgroundColor: \"#fafafa\"\n            }}\n            elevation={0}\n            >\n                <AppBar  position=\"static\" className={classes.header}>\n                    <ToolBar>\n                        <Typography color=\"inherit\" variant=\"h5\" className={classes.logo}>Tasks</Typography>\n                    </ToolBar>\n                </AppBar>\n                <Grid container justify=\"center\"  className={classes.taskPage}>\n                    <Grid item xs={12} md={8} lg={6}  >\n                        <TaskForm/>\n                        <TaskList \n                            tasks={tasks} \n                         \n                            />\n                    </Grid>\n                   \n                </Grid>\n               \n\n        </Paper>\n    )\n}\n\nexport default withStyles(styles)(Tasks);","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Tasks from \"./components/tasks/tasks.component\";\nimport {TasksProvider} from \"./contexts/tasks.contexts\";\n\nfunction App() {\n  return (\n    <TasksProvider>\n     \n      <Tasks />\n     \n     \n    </TasksProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}