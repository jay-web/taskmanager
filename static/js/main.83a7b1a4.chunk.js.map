{"version":3,"sources":["hooks/useToggle.js","hooks/useInput.js","reducer/todo.reducer.jsx","hooks/useLocaStorageReducer.js","contexts/tasks.contexts.jsx","components/editTask_form/editTask.component.jsx","components/task/task.component.jsx","components/tasks_list/tasksList.component.jsx","components/tasks_form/tasksForm.component.jsx","components/tasks/tasks.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initialValue","useState","state","setState","toggleState","useInput","e","target","value","taskReducer","action","type","task","id","uuidv4","item","completed","filter","map","newTask","useLocalStorageReducer","key","defaultVal","reducer","useReducer","val","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","defaultTasks","TasksContext","createContext","DispatchContext","TasksProvider","props","tasks","Provider","children","EditForm","toggle","handleChange","reset","useContext","onSubmit","preventDefault","style","marginLeft","width","TextField","fullWidth","onChange","Task","isEditing","textDecoration","console","log","ListItem","gutters","height","Checkbox","tabIndex","checked","onClick","ListItemText","ListItemSecondaryAction","IconButton","aria-label","memo","TaskList","length","Paper","List","i","Fragment","Divider","TaskForm","margin","padding","label","Tasks","backgroundColor","elevation","AppBar","color","position","marginBottom","Typography","variant","Grid","container","justify","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83a7b1a4.chunk.js","sourcesContent":["import {useState } from \"react\";\n\nconst useToggle = (initialValue = false) => {\n    const [state, setState] = useState(initialValue);\n\n    const toggleState = () => {\n        setState(!state);\n    }\n\n    return [state, toggleState];\n}\n\n\nexport default useToggle;","import {useState } from \"react\";\n\nconst useInput = (initialValue) => {\n    const [state, setState] = useState(initialValue);\n\n    const handleChange = (e) => {\n        setState(e.target.value);\n    }\n\n    const reset = () => {\n        setState(\"\");\n    }\n\n    return [state, handleChange, reset];\n}\n\nexport default useInput;","import { v4 as uuidv4} from \"uuid\";\n\nconst taskReducer = (state, action) => {\n    switch(action.type){\n        case \"ADD_TASK\":\n            if(action.task === \"\"){\n                return state;\n            }else{\n                return [...state, {id: uuidv4(), item: action.task, completed: false}]\n            }\n        case \"REMOVE_TASK\":\n            return state.filter((task) => {\n                return task.id  !== action.id;\n            });\n        case \"TOGGLE_TASK\":\n            return state.map((task) => {\n                if(task.id === action.id){\n                    return { ...task, completed: !task.completed}\n                }else{\n                    return task;\n                }\n            });\n        case \"UPDATE_TASK\":\n            if(action.newTask === \"\"){\n                return state;\n            }else{\n                return state.map(task => {\n                    if(task.id === action.id){\n                        return {...task, item: action.newTask}\n                    }else{\n                        return task;\n                    }\n                });\n            }\n        default :\n            return state;\n          \n    }\n}\n\n\n\nexport default taskReducer;","import {useReducer, useEffect} from \"react\";\n\n\nfunction useLocalStorageReducer (key , defaultVal, reducer) {\n    const[state, dispatch] = useReducer(reducer, defaultVal, () => {\n        let val;\n        try{\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n        }catch(e){\n            val = defaultVal;\n        }\n        return val;\n    });\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [state])\n\n    return [state, dispatch];\n\n}\n\nexport default useLocalStorageReducer;","import React, { createContext } from \"react\";\n// import useTaskState from \"../hooks/useTaskState\";\nimport taskReducer from \"../reducer/todo.reducer\";\nimport useLocalStorageReducer from \"../hooks/useLocaStorageReducer\";\n\nconst defaultTasks = [{ id: 1, item: \"lets do some tasks\", completed: false }];\n\nexport const TasksContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TasksProvider(props) {\n  // const todosmethods = useTaskState(defaultTasks);\n  // const [tasks, dispatch] = useReducer(taskReducer);\n  const [tasks, dispatch] = useLocalStorageReducer(\"todos\", defaultTasks, taskReducer);\n\n  return (\n    <TasksContext.Provider value={tasks}>\n      <DispatchContext.Provider value={dispatch}>\n          {props.children}\n      </DispatchContext.Provider>\n    </TasksContext.Provider>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport useInput from \"../../hooks/useInput\";\nimport {DispatchContext } from \"../../contexts/tasks.contexts\";\n\nfunction EditForm ({task, toggle}) {\n    const [value, handleChange, reset] = useInput(task.item);  // using custom hook\n    const dispatch = useContext(DispatchContext);\n\n    const onSubmit =(e) => {\n        e.preventDefault();\n        dispatch({type: \"UPDATE_TASK\", id: task.id, newTask: value});\n        // updateTask(task.id, value);\n        toggle();\n        reset()\n\n    }\n    return (\n        <form onSubmit={onSubmit} style={{ marginLeft: \"1rem\", width: \"90%\"}}>\n            <TextField \n                fullWidth \n                value={value} \n                onChange={(e) => handleChange(e)}\n             />\n        </form>\n    \n    )\n}\n\nexport default EditForm;","import React, {useContext, memo} from \"react\";\nimport useToggle from \"./../../hooks/useToggle\";\n\nimport { ListItem, ListItemText, Checkbox } from \"@material-ui/core\";\nimport { IconButton, ListItemSecondaryAction } from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport EditForm from \"../editTask_form/editTask.component\";\nimport {DispatchContext } from \"../../contexts/tasks.contexts\";\n\nfunction Task({ task, completed }) {\n  const [isEditing, toggle] = useToggle(false);\n  const  dispatch  = useContext(DispatchContext);\n\n  const textDecoration = completed ? \"line-through\" : \"none\";\n  console.log(task);\n  return (\n    <span>\n      <ListItem gutters=\"true\" \n        style={{ height : \"64px\"}}>\n        {!isEditing ? (\n          <>\n            <Checkbox\n              tabIndex={-1}\n              checked={completed}\n              onClick={() => dispatch({type: \"TOGGLE_TASK\", id: task.id})}\n            />\n            <ListItemText style={{ textDecoration: textDecoration }}>\n              {task.item}\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => dispatch({type: \"REMOVE_TASK\", id: task.id})}\n              >\n                <DeleteIcon />\n              </IconButton>\n              <IconButton aria-label=\"edit\" onClick={() => toggle()}>\n                <EditIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        ) : (\n          <EditForm task={task} toggle={toggle} />\n        )}\n      </ListItem>\n    </span>\n  );\n}\n\nexport default memo(Task);\n","import React, {useContext} from \"react\";\nimport { List, Paper, Divider } from \"@material-ui/core\";\nimport Task from \"./../task/task.component\";\nimport {TasksContext} from \"../../contexts/tasks.contexts\";\n\n\nfunction TaskList() {\n  const tasks = useContext(TasksContext);\n\n  if(tasks.length){\n    return (\n      <Paper>\n        <List>\n          {tasks.map((task, i) => {\n            return (\n              <React.Fragment key={task.id} >\n              <Task \n                  task={task} \n                  \n                  completed={task.completed} \n                \n                  />\n                {i < tasks.length - 1 && <Divider />}\n                </React.Fragment>\n            );\n          })}\n        </List>\n      </Paper>\n    );\n  }\n\n  return null;\n \n}\n\nexport default TaskList;\n","import React, {useContext } from \"react\";\nimport {Paper, TextField} from \"@material-ui/core\";\nimport useInput from \"../../hooks/useInput\";\nimport {DispatchContext} from \"../../contexts/tasks.contexts\";\n\nfunction TaskForm () {\n    const [value, handleChange, reset ] = useInput(\"\");\n    const dispatch = useContext(DispatchContext);\n    const onSubmit = (e) => {\n        e.preventDefault();\n        dispatch({type: \"ADD_TASK\", task: value});\n        // addTask(value);\n        reset();\n    }\n\n    return (\n        <Paper style={{ margin: \"1rem 0\", padding: \"0 .2rem\"}}>\n            <form onSubmit={onSubmit}>\n              <TextField \n                value={value} \n                onChange={handleChange} \n                label=\"Add new task\" \n                fullWidth/>\n            </form>\n          \n        </Paper>\n    )\n}\n\nexport default TaskForm;","import React, {useContext } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TaskList from \"./../tasks_list/tasksList.component\";\nimport TaskForm from \"./../tasks_form/tasksForm.component\";\nimport useTaskState from \"./../../hooks/useTaskState\";\nimport {TasksContext} from \"../../contexts/tasks.contexts\";\n\nfunction Tasks() {\n   const initialTasks = [];\n\n    // const {tasks} = useTaskState(initialTasks);\n    const tasks  = useContext(TasksContext);\n \n    return (\n        <Paper\n            style={{\n                padding: 0,\n                margin: 0,\n                height: \"100vh\",\n                backgroundColor: \"#fafafa\"\n            }}\n            elevation={0}\n            >\n                <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\", marginBottom: \"1rem\"}}>\n                    <ToolBar>\n                        <Typography color=\"inherit\" variant=\"h5\" >Tasks</Typography>\n                    </ToolBar>\n                </AppBar>\n                <Grid container justify=\"center\" >\n                    <Grid item xs={12} md={8} lg={6}>\n                        <TaskForm/>\n                        <TaskList \n                            tasks={tasks} \n                         \n                            />\n                    </Grid>\n                   \n                </Grid>\n               \n\n        </Paper>\n    )\n}\n\nexport default Tasks;","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Tasks from \"./components/tasks/tasks.component\";\nimport {TasksProvider} from \"./contexts/tasks.contexts\";\n\nfunction App() {\n  return (\n    <TasksProvider>\n      <Tasks />\n    </TasksProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}